#!deps/LuaJIT-2.0.5/src/luajit

local LUNA_PROGNAME = "luna"
local LUNA_PROMPT = "> "
local LUNA_PROMPT_CONT = ">> "

-- don't let change implementation
local _G = _G
local assert = assert
local collectgarbage = collectgarbage
local loadfile = loadfile
local loadstring = loadstring
local pcall = pcall
local rawget = rawget
local select = select
local tostring = tostring
local type = type
local unpack = unpack
local xpcall = xpcall
local stderr = io.stderr
local stdout = io.stdout
local stdin = io.stdin
local string_format = string.format
local string_sub = string.sub
local getenv = os.getenv
local exit = os.exit

-- Use external functions, if available
local lua_stdin_is_tty = function()
    return true
end
local setsignal = function()
end

local function quote(str)
    return "'" .. x .. "'"
end

local function usage()
    local USAGE = ("usage: %s [options] [script [args]]\n" .. [[
Available options are:
  TODO
]])
    stderr:write(string_format(USAGE, LUNA_PROGNAME))
    stderr:flush()
end

local function dofile(filename)
    local f = assert(loadfile(filename))
    return f()
end

local function dostring(str)
    local f = assert(loadstring(str))
    return f()
end

local function lunainit()
    path = dofile "src/path.lua"
end

lunainit()

local function repl()
    while true do
        stderr:write(LUNA_PROMPT)
        stderr:flush()
        input = stdin:read("*l")
        res = pcall(dostring, input)
        if res ~= nil then
            stdout:write(tostring(res))
            stdout:flush()
            stderr:write("\n")
        end
    end
end

repl()
